{
    "metadata": {
        "style_distribution": {
            "_data": {
                "7.99": 24,
                "9.6": 1,
                "6.4": 7,
                "7.47": 3,
                "12.8": 7,
                "8.53": 206,
                "10.67": 12,
                "7.25": 14
            },
            "_body_size": 8.53,
            "_min_found_size": 6.4,
            "_max_found_size": 12.8
        },
        "filename": "interview_cheatsheet.pdf"
    },
    "elements": [
        {
            "heading": null,
            "content": [
                {
                    "style": {
                        "bold": false,
                        "italic": false,
                        "font_name": "Times-Roman",
                        "mapped_font_size": "small",
                        "mean_size": 7.9
                    },
                    "page": 0,
                    "reading_order": 0,
                    "text": "31/10/2019"
                },
                {
                    "style": {
                        "bold": false,
                        "italic": false,
                        "font_name": "Times-Roman",
                        "mapped_font_size": "small",
                        "mean_size": 7.9
                    },
                    "page": 0,
                    "reading_order": 1,
                    "text": "This is my technical interview cheat sheet. Feel free to fork it or do whatever you want with it. PLEASE let me know if there are any errors or if a\u2026"
                }
            ],
            "children": [],
            "level": 0
        },
        {
            "heading": {
                "style": {
                    "bold": true,
                    "italic": false,
                    "font_name": ".SFNSText-Semibold",
                    "mapped_font_size": "large",
                    "mean_size": 9.6
                },
                "page": 0,
                "reading_order": 2,
                "text": "TSiege / The Technical Interview Cheat Sheet.md"
            },
            "content": [
                {
                    "style": {
                        "bold": false,
                        "italic": false,
                        "font_name": ".SFNSText",
                        "mapped_font_size": "xsmall",
                        "mean_size": 6.4
                    },
                    "page": 0,
                    "reading_order": 3,
                    "text": "Last active 2 days ago \u2022 Report abuse"
                },
                {
                    "style": {
                        "bold": false,
                        "italic": false,
                        "font_name": ".SFNSText",
                        "mapped_font_size": "small",
                        "mean_size": 7.4
                    },
                    "page": 0,
                    "reading_order": 4,
                    "text": ""
                },
                {
                    "style": {
                        "bold": false,
                        "italic": false,
                        "font_name": ".SFNSText",
                        "mapped_font_size": "small",
                        "mean_size": 7.4
                    },
                    "page": 0,
                    "reading_order": 5,
                    "text": ""
                }
            ],
            "children": [
                {
                    "heading": {
                        "style": {
                            "bold": true,
                            "italic": false,
                            "font_name": ".SFNSText-Semibold",
                            "mapped_font_size": "xsmall",
                            "mean_size": 6.4
                        },
                        "page": 0,
                        "reading_order": 6,
                        "text": "Embed"
                    },
                    "content": [],
                    "children": [],
                    "level": 1
                },
                {
                    "heading": {
                        "style": {
                            "bold": true,
                            "italic": false,
                            "font_name": ".SFNSText-Semibold",
                            "mapped_font_size": "xsmall",
                            "mean_size": 6.4
                        },
                        "page": 0,
                        "reading_order": 7,
                        "text": "Download ZIP"
                    },
                    "content": [
                        {
                            "style": {
                                "bold": false,
                                "italic": false,
                                "font_name": "Menlo-Regular",
                                "mapped_font_size": "xsmall",
                                "mean_size": 6.4
                            },
                            "page": 0,
                            "reading_order": 8,
                            "text": "<script src=\"https://gis"
                        },
                        {
                            "style": {
                                "bold": false,
                                "italic": false,
                                "font_name": ".SFNSText",
                                "mapped_font_size": "small",
                                "mean_size": 7.4
                            },
                            "page": 0,
                            "reading_order": 9,
                            "text": "This is my technical interview cheat sheet. Feel free to fork it or do whatever you want with it. PLEASE let me know if there are any errors or if anything"
                        },
                        {
                            "style": {
                                "bold": false,
                                "italic": false,
                                "font_name": ".SFNSText",
                                "mapped_font_size": "small",
                                "mean_size": 7.4
                            },
                            "page": 0,
                            "reading_order": 10,
                            "text": "crucial is missing. I will add more links soon."
                        }
                    ],
                    "children": [],
                    "level": 1
                },
                {
                    "heading": {
                        "style": {
                            "bold": true,
                            "italic": false,
                            "font_name": "Menlo-Bold",
                            "mapped_font_size": "xsmall",
                            "mean_size": 6.4
                        },
                        "page": 0,
                        "reading_order": 11,
                        "text": "The Technical Interview Cheat Sheet.md"
                    },
                    "content": [],
                    "children": [],
                    "level": 1
                }
            ],
            "level": 0
        },
        {
            "heading": {
                "style": {
                    "bold": true,
                    "italic": false,
                    "font_name": ".SFNSDisplay-Semibold",
                    "mapped_font_size": "xlarge",
                    "mean_size": 12.8
                },
                "page": 0,
                "reading_order": 12,
                "text": "ANNOUNCEMENT"
            },
            "content": [
                {
                    "style": {
                        "bold": false,
                        "italic": false,
                        "font_name": ".SFNSText",
                        "mapped_font_size": "middle",
                        "mean_size": 8.5
                    },
                    "page": 0,
                    "reading_order": 13,
                    "text": "I have moved this over to the Tech Interview Cheat Sheet Repo since a gist is too difficult to maintain as an open source\nendevaor and there is no way to version it. I have updated below, but I will not be able to keep this one up to date so\nplease checkout the repo instead. The below is just for some preservation for those who stumble across here."
                },
                {
                    "style": {
                        "bold": false,
                        "italic": false,
                        "font_name": ".SFNSText",
                        "mapped_font_size": "middle",
                        "mean_size": 8.5
                    },
                    "page": 0,
                    "reading_order": 14,
                    "text": "\\"
                }
            ],
            "children": [],
            "level": 0
        },
        {
            "heading": {
                "style": {
                    "bold": true,
                    "italic": false,
                    "font_name": ".SFNSDisplay-Semibold",
                    "mapped_font_size": "xlarge",
                    "mean_size": 12.8
                },
                "page": 0,
                "reading_order": 15,
                "text": "Studying for a Tech Interview Sucks, so Here's a Cheat Sheet to Help"
            },
            "content": [
                {
                    "style": {
                        "bold": false,
                        "italic": false,
                        "font_name": ".SFNSText",
                        "mapped_font_size": "middle",
                        "mean_size": 8.5
                    },
                    "page": 0,
                    "reading_order": 16,
                    "text": "This list is meant to be both a quick guide and reference for further research into these topics. It's basically a summary of"
                },
                {
                    "style": {
                        "bold": false,
                        "italic": false,
                        "font_name": ".SFNSText",
                        "mapped_font_size": "middle",
                        "mean_size": 8.5
                    },
                    "page": 0,
                    "reading_order": 17,
                    "text": "that comp sci course you never took or forgot about, so there's no way it can cover everything in depth."
                }
            ],
            "children": [],
            "level": 0
        },
        {
            "heading": {
                "style": {
                    "bold": true,
                    "italic": false,
                    "font_name": ".SFNSDisplay-Semibold",
                    "mapped_font_size": "xlarge",
                    "mean_size": 12.8
                },
                "page": 0,
                "reading_order": 18,
                "text": "Contributing"
            },
            "content": [
                {
                    "style": {
                        "bold": false,
                        "italic": false,
                        "font_name": ".SFNSText",
                        "mapped_font_size": "middle",
                        "mean_size": 8.5
                    },
                    "page": 0,
                    "reading_order": 19,
                    "text": "Please see the Tech Interview Cheat Sheet Repo"
                }
            ],
            "children": [],
            "level": 0
        },
        {
            "heading": {
                "style": {
                    "bold": true,
                    "italic": false,
                    "font_name": ".SFNSDisplay-Semibold",
                    "mapped_font_size": "xlarge",
                    "mean_size": 12.8
                },
                "page": 0,
                "reading_order": 20,
                "text": "Data Structure Basics"
            },
            "content": [],
            "children": [
                {
                    "heading": {
                        "style": {
                            "bold": true,
                            "italic": false,
                            "font_name": ".SFNSDisplay-Semibold",
                            "mapped_font_size": "large",
                            "mean_size": 10.6
                        },
                        "page": 0,
                        "reading_order": 21,
                        "text": "Array"
                    },
                    "content": [],
                    "children": [
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 0,
                                "reading_order": 22,
                                "text": "Definition:"
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 0,
                                    "reading_order": 23,
                                    "text": "Stores data elements based on an sequential, most commonly 0 based, index."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 0,
                                    "reading_order": 24,
                                    "text": "Based on tuples from set theory."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 0,
                                    "reading_order": 25,
                                    "text": "They are one of the oldest, most commonly used data structures."
                                }
                            ],
                            "children": [],
                            "level": 2
                        },
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 0,
                                "reading_order": 26,
                                "text": "What you need to know:"
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 0,
                                    "reading_order": 27,
                                    "text": "Optimal for indexing; bad at searching, inserting, and deleting (except at the end)."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 0,
                                    "reading_order": 28,
                                    "text": "Linear arrays, or one dimensional arrays, are the most basic."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 0,
                                    "reading_order": 29,
                                    "text": "Are static in size, meaning that they are declared with a fixed size."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 0,
                                    "reading_order": 30,
                                    "text": "Dynamic arrays are like one dimensional arrays, but have reserved space for additional elements."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 0,
                                    "reading_order": 31,
                                    "text": "If a dynamic array is full, it copies its contents to a larger array."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 0,
                                    "reading_order": 32,
                                    "text": "Multi dimensional arrays nested arrays that allow for multiple dimensions such as an array of arrays providing a 2\ndimensional spacial representation via x, y coordinates."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": "Times-Roman",
                                        "mapped_font_size": "small",
                                        "mean_size": 7.9
                                    },
                                    "page": 0,
                                    "reading_order": 33,
                                    "text": "https://gist.github.com/TSiege/cbb0507082bb18ff7e4b#\ufb01le-the-technical-interview-cheat-sheet-md"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": "Times-Roman",
                                        "mapped_font_size": "small",
                                        "mean_size": 7.9
                                    },
                                    "page": 0,
                                    "reading_order": 34,
                                    "text": "1/18"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": "Times-Roman",
                                        "mapped_font_size": "small",
                                        "mean_size": 7.9
                                    },
                                    "page": 1,
                                    "reading_order": 35,
                                    "text": "31/10/2019"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": "Times-Roman",
                                        "mapped_font_size": "small",
                                        "mean_size": 7.9
                                    },
                                    "page": 1,
                                    "reading_order": 36,
                                    "text": "This is my technical interview cheat sheet. Feel free to fork it or do whatever you want with it. PLEASE let me know if there are any errors or if a\u2026"
                                }
                            ],
                            "children": [],
                            "level": 2
                        },
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 1,
                                "reading_order": 37,
                                "text": "Time Complexity:"
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 1,
                                    "reading_order": 38,
                                    "text": "Indexing: Linear array: O(1), Dynamic array: O(1)"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 1,
                                    "reading_order": 39,
                                    "text": "Search: Linear array: O(n), Dynamic array: O(n)"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 1,
                                    "reading_order": 40,
                                    "text": "Optimized Search: Linear array: O(log n), Dynamic array: O(log n)"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 1,
                                    "reading_order": 41,
                                    "text": "Insertion: Linear array: n/a Dynamic array: O(n)"
                                }
                            ],
                            "children": [],
                            "level": 2
                        }
                    ],
                    "level": 1
                },
                {
                    "heading": {
                        "style": {
                            "bold": true,
                            "italic": false,
                            "font_name": ".SFNSDisplay-Semibold",
                            "mapped_font_size": "large",
                            "mean_size": 10.6
                        },
                        "page": 1,
                        "reading_order": 42,
                        "text": "Linked List"
                    },
                    "content": [],
                    "children": [
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 1,
                                "reading_order": 43,
                                "text": "Definition:"
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 1,
                                    "reading_order": 44,
                                    "text": "Stores data with nodes that point to other nodes."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 1,
                                    "reading_order": 45,
                                    "text": "Nodes, at its most basic it has one datum and one reference (another node)."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 1,
                                    "reading_order": 46,
                                    "text": "A linked list chains nodes together by pointing one node's reference towards another node."
                                }
                            ],
                            "children": [],
                            "level": 2
                        },
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 1,
                                "reading_order": 47,
                                "text": "What you need to know:"
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 1,
                                    "reading_order": 48,
                                    "text": "Designed to optimize insertion and deletion, slow at indexing and searching."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 1,
                                    "reading_order": 49,
                                    "text": "Doubly linked list has nodes that also reference the previous node."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 1,
                                    "reading_order": 50,
                                    "text": "Circularly linked list is simple linked list whose tail, the last node, references the head, the first node."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 1,
                                    "reading_order": 51,
                                    "text": "Stack, commonly implemented with linked lists but can be made from arrays too."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 1,
                                    "reading_order": 52,
                                    "text": "Stacks are last in, first out (LIFO) data structures."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 1,
                                    "reading_order": 53,
                                    "text": "Made with a linked list by having the head be the only place for insertion and removal."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 1,
                                    "reading_order": 54,
                                    "text": "Queues, too can be implemented with a linked list or an array."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 1,
                                    "reading_order": 55,
                                    "text": "Queues are a first in, first out (FIFO) data structure."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 1,
                                    "reading_order": 56,
                                    "text": "Made with a doubly linked list that only removes from head and adds to tail."
                                }
                            ],
                            "children": [],
                            "level": 2
                        },
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 1,
                                "reading_order": 57,
                                "text": "Time Complexity:"
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 1,
                                    "reading_order": 58,
                                    "text": "Indexing: Linked Lists: O(n)"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 1,
                                    "reading_order": 59,
                                    "text": "Search: Linked Lists: O(n)"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 1,
                                    "reading_order": 60,
                                    "text": "Optimized Search: Linked Lists: O(n)"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 1,
                                    "reading_order": 61,
                                    "text": "Insertion: Linked Lists: O(1)"
                                }
                            ],
                            "children": [],
                            "level": 2
                        }
                    ],
                    "level": 1
                },
                {
                    "heading": {
                        "style": {
                            "bold": true,
                            "italic": false,
                            "font_name": ".SFNSDisplay-Semibold",
                            "mapped_font_size": "large",
                            "mean_size": 10.6
                        },
                        "page": 1,
                        "reading_order": 62,
                        "text": "Hash Table or Hash Map"
                    },
                    "content": [],
                    "children": [
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 1,
                                "reading_order": 63,
                                "text": "Definition:"
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 1,
                                    "reading_order": 64,
                                    "text": "Stores data with key value pairs."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 1,
                                    "reading_order": 65,
                                    "text": "Hash functions accept a key and return an output unique only to that specific key."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 1,
                                    "reading_order": 66,
                                    "text": "This is known as hashing, which is the concept that an input and an output have a one-to-one correspondence"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 1,
                                    "reading_order": 67,
                                    "text": "to map information."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 1,
                                    "reading_order": 68,
                                    "text": "Hash functions return a unique address in memory for that data."
                                }
                            ],
                            "children": [],
                            "level": 2
                        },
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 1,
                                "reading_order": 69,
                                "text": "What you need to know:"
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 1,
                                    "reading_order": 70,
                                    "text": "Designed to optimize searching, insertion, and deletion."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 1,
                                    "reading_order": 71,
                                    "text": "Hash collisions are when a hash function returns the same output for two distinct inputs."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 1,
                                    "reading_order": 72,
                                    "text": "All hash functions have this problem."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 1,
                                    "reading_order": 73,
                                    "text": "This is often accommodated for by having the hash tables be very large."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 1,
                                    "reading_order": 74,
                                    "text": "Hashes are important for associative arrays and database indexing."
                                }
                            ],
                            "children": [],
                            "level": 2
                        },
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 1,
                                "reading_order": 75,
                                "text": "Time Complexity:"
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 1,
                                    "reading_order": 76,
                                    "text": "Indexing: Hash Tables: O(1)"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 1,
                                    "reading_order": 77,
                                    "text": "Search: Hash Tables: O(1)"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 1,
                                    "reading_order": 78,
                                    "text": "Insertion: Hash Tables: O(1)"
                                }
                            ],
                            "children": [],
                            "level": 2
                        }
                    ],
                    "level": 1
                },
                {
                    "heading": {
                        "style": {
                            "bold": true,
                            "italic": false,
                            "font_name": ".SFNSDisplay-Semibold",
                            "mapped_font_size": "large",
                            "mean_size": 10.6
                        },
                        "page": 1,
                        "reading_order": 79,
                        "text": "Binary Tree"
                    },
                    "content": [],
                    "children": [
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 1,
                                "reading_order": 80,
                                "text": "Definition:"
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": "Times-Roman",
                                        "mapped_font_size": "small",
                                        "mean_size": 7.9
                                    },
                                    "page": 1,
                                    "reading_order": 81,
                                    "text": "https://gist.github.com/TSiege/cbb0507082bb18ff7e4b#\ufb01le-the-technical-interview-cheat-sheet-md"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": "Times-Roman",
                                        "mapped_font_size": "small",
                                        "mean_size": 7.9
                                    },
                                    "page": 1,
                                    "reading_order": 82,
                                    "text": "2/18"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": "Times-Roman",
                                        "mapped_font_size": "small",
                                        "mean_size": 7.9
                                    },
                                    "page": 2,
                                    "reading_order": 83,
                                    "text": "31/10/2019"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": "Times-Roman",
                                        "mapped_font_size": "small",
                                        "mean_size": 7.9
                                    },
                                    "page": 2,
                                    "reading_order": 84,
                                    "text": "This is my technical interview cheat sheet. Feel free to fork it or do whatever you want with it. PLEASE let me know if there are any errors or if a\u2026"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 2,
                                    "reading_order": 85,
                                    "text": "Is a tree like data structure where every node has at most two children."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 2,
                                    "reading_order": 86,
                                    "text": "There is one left and right child node."
                                }
                            ],
                            "children": [],
                            "level": 2
                        },
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 2,
                                "reading_order": 87,
                                "text": "What you need to know:"
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 2,
                                    "reading_order": 88,
                                    "text": "Designed to optimize searching and sorting."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 2,
                                    "reading_order": 89,
                                    "text": "A degenerate tree is an unbalanced tree, which if entirely one-sided is a essentially a linked list."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 2,
                                    "reading_order": 90,
                                    "text": "They are comparably simple to implement than other data structures."
                                }
                            ],
                            "children": [],
                            "level": 2
                        },
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 2,
                                "reading_order": 91,
                                "text": "Used to make binary search trees."
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 2,
                                    "reading_order": 92,
                                    "text": "A binary tree that uses comparable keys to assign which direction a child is."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 2,
                                    "reading_order": 93,
                                    "text": "Left child has a key smaller than it's parent node."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 2,
                                    "reading_order": 94,
                                    "text": "Right child has a key greater than it's parent node."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 2,
                                    "reading_order": 95,
                                    "text": "There can be no duplicate node."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 2,
                                    "reading_order": 96,
                                    "text": "Because of the above it is more likely to be used as a data structure than a binary tree."
                                }
                            ],
                            "children": [],
                            "level": 2
                        },
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 2,
                                "reading_order": 97,
                                "text": "Time Complexity:"
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 2,
                                    "reading_order": 98,
                                    "text": "Indexing: Binary Search Tree: O(log n)"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 2,
                                    "reading_order": 99,
                                    "text": "Search: Binary Search Tree: O(log n)"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 2,
                                    "reading_order": 100,
                                    "text": "Insertion: Binary Search Tree: O(log n)"
                                }
                            ],
                            "children": [],
                            "level": 2
                        }
                    ],
                    "level": 1
                }
            ],
            "level": 0
        },
        {
            "heading": {
                "style": {
                    "bold": true,
                    "italic": false,
                    "font_name": ".SFNSDisplay-Semibold",
                    "mapped_font_size": "xlarge",
                    "mean_size": 12.8
                },
                "page": 2,
                "reading_order": 101,
                "text": "Search Basics"
            },
            "content": [],
            "children": [
                {
                    "heading": {
                        "style": {
                            "bold": true,
                            "italic": false,
                            "font_name": ".SFNSDisplay-Semibold",
                            "mapped_font_size": "large",
                            "mean_size": 10.6
                        },
                        "page": 2,
                        "reading_order": 102,
                        "text": "Breadth First Search"
                    },
                    "content": [],
                    "children": [
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 2,
                                "reading_order": 103,
                                "text": "Definition:"
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 2,
                                    "reading_order": 104,
                                    "text": "An algorithm that searches a tree (or graph) by searching levels of the tree first, starting at the root."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 2,
                                    "reading_order": 105,
                                    "text": "It finds every node on the same level, most often moving left to right."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 2,
                                    "reading_order": 106,
                                    "text": "While doing this it tracks the children nodes of the nodes on the current level."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 2,
                                    "reading_order": 107,
                                    "text": "When finished examining a level it moves to the left most node on the next level."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 2,
                                    "reading_order": 108,
                                    "text": "The bottom-right most node is evaluated last (the node that is deepest and is farthest right of it's level)."
                                }
                            ],
                            "children": [],
                            "level": 2
                        },
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 2,
                                "reading_order": 109,
                                "text": "What you need to know:"
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 2,
                                    "reading_order": 110,
                                    "text": "Optimal for searching a tree that is wider than it is deep."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 2,
                                    "reading_order": 111,
                                    "text": "Uses a queue to store information about the tree while it traverses a tree."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 2,
                                    "reading_order": 112,
                                    "text": "Because it uses a queue it is more memory intensive than depth first search."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 2,
                                    "reading_order": 113,
                                    "text": "The queue uses more memory because it needs to stores pointers"
                                }
                            ],
                            "children": [],
                            "level": 2
                        },
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 2,
                                "reading_order": 114,
                                "text": "Time Complexity:"
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 2,
                                    "reading_order": 115,
                                    "text": "Search: Breadth First Search: O(V + E)"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 2,
                                    "reading_order": 116,
                                    "text": "E is number of edges"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 2,
                                    "reading_order": 117,
                                    "text": "V is number of vertices"
                                }
                            ],
                            "children": [],
                            "level": 2
                        }
                    ],
                    "level": 1
                },
                {
                    "heading": {
                        "style": {
                            "bold": true,
                            "italic": false,
                            "font_name": ".SFNSDisplay-Semibold",
                            "mapped_font_size": "large",
                            "mean_size": 10.6
                        },
                        "page": 2,
                        "reading_order": 118,
                        "text": "Depth First Search"
                    },
                    "content": [],
                    "children": [
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 2,
                                "reading_order": 119,
                                "text": "Definition:"
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 2,
                                    "reading_order": 120,
                                    "text": "An algorithm that searches a tree (or graph) by searching depth of the tree first, starting at the root."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 2,
                                    "reading_order": 121,
                                    "text": "It traverses left down a tree until it cannot go further."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 2,
                                    "reading_order": 122,
                                    "text": "Once it reaches the end of a branch it traverses back up trying the right child of nodes on that branch, and if\npossible left from the right children."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 2,
                                    "reading_order": 123,
                                    "text": "When finished examining a branch it moves to the node right of the root then tries to go left on all it's children\nuntil it reaches the bottom."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 2,
                                    "reading_order": 124,
                                    "text": "The right most node is evaluated last (the node that is right of all it's ancestors)."
                                }
                            ],
                            "children": [],
                            "level": 2
                        },
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 2,
                                "reading_order": 125,
                                "text": "What you need to know:"
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": "Times-Roman",
                                        "mapped_font_size": "small",
                                        "mean_size": 7.9
                                    },
                                    "page": 2,
                                    "reading_order": 126,
                                    "text": "https://gist.github.com/TSiege/cbb0507082bb18ff7e4b#\ufb01le-the-technical-interview-cheat-sheet-md"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": "Times-Roman",
                                        "mapped_font_size": "small",
                                        "mean_size": 7.9
                                    },
                                    "page": 2,
                                    "reading_order": 127,
                                    "text": "3/18"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": "Times-Roman",
                                        "mapped_font_size": "small",
                                        "mean_size": 7.9
                                    },
                                    "page": 3,
                                    "reading_order": 128,
                                    "text": "31/10/2019"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": "Times-Roman",
                                        "mapped_font_size": "small",
                                        "mean_size": 7.9
                                    },
                                    "page": 3,
                                    "reading_order": 129,
                                    "text": "This is my technical interview cheat sheet. Feel free to fork it or do whatever you want with it. PLEASE let me know if there are any errors or if a\u2026"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 3,
                                    "reading_order": 130,
                                    "text": "Optimal for searching a tree that is deeper than it is wide."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 3,
                                    "reading_order": 131,
                                    "text": "Uses a stack to push nodes onto."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 3,
                                    "reading_order": 132,
                                    "text": "Because a stack is LIFO it does not need to keep track of the nodes pointers and is therefore less memory\nintensive than breadth first search."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 3,
                                    "reading_order": 133,
                                    "text": "Once it cannot go further left it begins evaluating the stack."
                                }
                            ],
                            "children": [],
                            "level": 2
                        },
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 3,
                                "reading_order": 134,
                                "text": "Time Complexity:"
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 3,
                                    "reading_order": 135,
                                    "text": "Search: Depth First Search: O(|E| + |V|)"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 3,
                                    "reading_order": 136,
                                    "text": "E is number of edges"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 3,
                                    "reading_order": 137,
                                    "text": "V is number of vertices"
                                }
                            ],
                            "children": [],
                            "level": 2
                        },
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 3,
                                "reading_order": 138,
                                "text": "Breadth First Search Vs. Depth First Search"
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 3,
                                    "reading_order": 139,
                                    "text": "The simple answer to this question is that it depends on the size and shape of the tree."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 3,
                                    "reading_order": 140,
                                    "text": "For wide, shallow trees use Breadth First Search"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 3,
                                    "reading_order": 141,
                                    "text": "For deep, narrow trees use Depth First Search"
                                }
                            ],
                            "children": [],
                            "level": 2
                        },
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 3,
                                "reading_order": 142,
                                "text": "Nuances:"
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 3,
                                    "reading_order": 143,
                                    "text": "Because BFS uses queues to store information about the nodes and its children, it could use more memory than is\navailable on your computer. (But you probably won't have to worry about this.)"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 3,
                                    "reading_order": 144,
                                    "text": "If using a DFS on a tree that is very deep you might go unnecessarily deep in the search. See xkcd for more\ninformation."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 3,
                                    "reading_order": 145,
                                    "text": "Breadth First Search tends to be a looping algorithm."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 3,
                                    "reading_order": 146,
                                    "text": "Depth First Search tends to be a recursive algorithm."
                                }
                            ],
                            "children": [],
                            "level": 2
                        }
                    ],
                    "level": 1
                }
            ],
            "level": 0
        },
        {
            "heading": {
                "style": {
                    "bold": true,
                    "italic": false,
                    "font_name": ".SFNSDisplay-Semibold",
                    "mapped_font_size": "xlarge",
                    "mean_size": 12.8
                },
                "page": 3,
                "reading_order": 147,
                "text": "Efficient Sorting Basics"
            },
            "content": [],
            "children": [
                {
                    "heading": {
                        "style": {
                            "bold": true,
                            "italic": false,
                            "font_name": ".SFNSDisplay-Semibold",
                            "mapped_font_size": "large",
                            "mean_size": 10.6
                        },
                        "page": 3,
                        "reading_order": 148,
                        "text": "Merge Sort"
                    },
                    "content": [],
                    "children": [
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 3,
                                "reading_order": 149,
                                "text": "Definition:"
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 3,
                                    "reading_order": 150,
                                    "text": "A comparison based sorting algorithm"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 3,
                                    "reading_order": 151,
                                    "text": "Divides entire dataset into groups of at most two."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 3,
                                    "reading_order": 152,
                                    "text": "Compares each number one at a time, moving the smallest number to left of the pair."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 3,
                                    "reading_order": 153,
                                    "text": "Once all pairs sorted it then compares left most elements of the two leftmost pairs creating a sorted group of"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 3,
                                    "reading_order": 154,
                                    "text": "four with the smallest numbers on the left and the largest ones on the right."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 3,
                                    "reading_order": 155,
                                    "text": "This process is repeated until there is only one set."
                                }
                            ],
                            "children": [],
                            "level": 2
                        },
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 3,
                                "reading_order": 156,
                                "text": "What you need to know:"
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 3,
                                    "reading_order": 157,
                                    "text": "This is one of the most basic sorting algorithms."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 3,
                                    "reading_order": 158,
                                    "text": "Know that it divides all the data into as small possible sets then compares them."
                                }
                            ],
                            "children": [],
                            "level": 2
                        },
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 3,
                                "reading_order": 159,
                                "text": "Time Complexity:"
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 3,
                                    "reading_order": 160,
                                    "text": "Best Case Sort: Merge Sort: O(n)"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 3,
                                    "reading_order": 161,
                                    "text": "Average Case Sort: Merge Sort: O(n log n)"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 3,
                                    "reading_order": 162,
                                    "text": "Worst Case Sort: Merge Sort: O(n log n)"
                                }
                            ],
                            "children": [],
                            "level": 2
                        }
                    ],
                    "level": 1
                },
                {
                    "heading": {
                        "style": {
                            "bold": true,
                            "italic": false,
                            "font_name": ".SFNSDisplay-Semibold",
                            "mapped_font_size": "large",
                            "mean_size": 10.6
                        },
                        "page": 3,
                        "reading_order": 163,
                        "text": "Quicksort"
                    },
                    "content": [],
                    "children": [
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 3,
                                "reading_order": 164,
                                "text": "Definition:"
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 3,
                                    "reading_order": 165,
                                    "text": "A comparison based sorting algorithm"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 3,
                                    "reading_order": 166,
                                    "text": "Divides entire dataset in half by selecting the middle element and putting all smaller elements to the left of the\nelement and larger ones to the right."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 3,
                                    "reading_order": 167,
                                    "text": "It repeats this process on the left side until it is comparing only two elements at which point the left side is\nsorted."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 3,
                                    "reading_order": 168,
                                    "text": "When the left side is finished sorting it performs the same operation on the right side."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": "Times-Roman",
                                        "mapped_font_size": "small",
                                        "mean_size": 7.9
                                    },
                                    "page": 3,
                                    "reading_order": 169,
                                    "text": "https://gist.github.com/TSiege/cbb0507082bb18ff7e4b#\ufb01le-the-technical-interview-cheat-sheet-md"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": "Times-Roman",
                                        "mapped_font_size": "small",
                                        "mean_size": 7.9
                                    },
                                    "page": 3,
                                    "reading_order": 170,
                                    "text": "4/18"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": "Times-Roman",
                                        "mapped_font_size": "small",
                                        "mean_size": 7.9
                                    },
                                    "page": 4,
                                    "reading_order": 171,
                                    "text": "31/10/2019"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": "Times-Roman",
                                        "mapped_font_size": "small",
                                        "mean_size": 7.9
                                    },
                                    "page": 4,
                                    "reading_order": 172,
                                    "text": "This is my technical interview cheat sheet. Feel free to fork it or do whatever you want with it. PLEASE let me know if there are any errors or if a\u2026"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 4,
                                    "reading_order": 173,
                                    "text": "Computer architecture favors the quicksort process."
                                }
                            ],
                            "children": [],
                            "level": 2
                        },
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 4,
                                "reading_order": 174,
                                "text": "What you need to know:"
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 4,
                                    "reading_order": 175,
                                    "text": "While it has the same Big O as (or worse in some cases) many other sorting algorithms it is often faster in practice\nthan many other sorting algorithms, such as merge sort."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 4,
                                    "reading_order": 176,
                                    "text": "Know that it halves the data set by the average continuously until all the information is sorted."
                                }
                            ],
                            "children": [],
                            "level": 2
                        },
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 4,
                                "reading_order": 177,
                                "text": "Time Complexity:"
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 4,
                                    "reading_order": 178,
                                    "text": "Best Case Sort: Merge Sort: O(n)"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 4,
                                    "reading_order": 179,
                                    "text": "Average Case Sort: Merge Sort: O(n log n)"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 4,
                                    "reading_order": 180,
                                    "text": "Worst Case Sort: Merge Sort: O(n^2)"
                                }
                            ],
                            "children": [],
                            "level": 2
                        }
                    ],
                    "level": 1
                },
                {
                    "heading": {
                        "style": {
                            "bold": true,
                            "italic": false,
                            "font_name": ".SFNSDisplay-Semibold",
                            "mapped_font_size": "large",
                            "mean_size": 10.6
                        },
                        "page": 4,
                        "reading_order": 181,
                        "text": "Bubble Sort"
                    },
                    "content": [],
                    "children": [
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 4,
                                "reading_order": 182,
                                "text": "Definition:"
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 4,
                                    "reading_order": 183,
                                    "text": "A comparison based sorting algorithm"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 4,
                                    "reading_order": 184,
                                    "text": "It iterates left to right comparing every couplet, moving the smaller element to the left."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 4,
                                    "reading_order": 185,
                                    "text": "It repeats this process until it no longer moves an element to the left."
                                }
                            ],
                            "children": [],
                            "level": 2
                        },
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 4,
                                "reading_order": 186,
                                "text": "What you need to know:"
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 4,
                                    "reading_order": 187,
                                    "text": "While it is very simple to implement, it is the least efficient of these three sorting methods."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 4,
                                    "reading_order": 188,
                                    "text": "Know that it moves one space to the right comparing two elements at a time and moving the smaller on to left."
                                }
                            ],
                            "children": [],
                            "level": 2
                        },
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 4,
                                "reading_order": 189,
                                "text": "Time Complexity:"
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 4,
                                    "reading_order": 190,
                                    "text": "Best Case Sort: Merge Sort: O(n)"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 4,
                                    "reading_order": 191,
                                    "text": "Average Case Sort: Merge Sort: O(n^2)"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 4,
                                    "reading_order": 192,
                                    "text": "Worst Case Sort: Merge Sort: O(n^2)"
                                }
                            ],
                            "children": [],
                            "level": 2
                        },
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 4,
                                "reading_order": 193,
                                "text": "Merge Sort Vs. Quicksort"
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 4,
                                    "reading_order": 194,
                                    "text": "Quicksort is likely faster in practice."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 4,
                                    "reading_order": 195,
                                    "text": "Merge Sort divides the set into the smallest possible groups immediately then reconstructs the incrementally as it"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 4,
                                    "reading_order": 196,
                                    "text": "sorts the groupings."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 4,
                                    "reading_order": 197,
                                    "text": "Quicksort continually divides the set by the average, until the set is recursively sorted."
                                }
                            ],
                            "children": [],
                            "level": 2
                        }
                    ],
                    "level": 1
                }
            ],
            "level": 0
        },
        {
            "heading": {
                "style": {
                    "bold": true,
                    "italic": false,
                    "font_name": ".SFNSDisplay-Semibold",
                    "mapped_font_size": "xlarge",
                    "mean_size": 12.8
                },
                "page": 4,
                "reading_order": 198,
                "text": "Basic Types of Algorithms"
            },
            "content": [],
            "children": [
                {
                    "heading": {
                        "style": {
                            "bold": true,
                            "italic": false,
                            "font_name": ".SFNSDisplay-Semibold",
                            "mapped_font_size": "large",
                            "mean_size": 10.6
                        },
                        "page": 4,
                        "reading_order": 199,
                        "text": "Recursive Algorithms"
                    },
                    "content": [],
                    "children": [
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 4,
                                "reading_order": 200,
                                "text": "Definition:"
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 4,
                                    "reading_order": 201,
                                    "text": "An algorithm that calls itself in its definition."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 4,
                                    "reading_order": 202,
                                    "text": "Recursive case a conditional statement that is used to trigger the recursion."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 4,
                                    "reading_order": 203,
                                    "text": "Base case a conditional statement that is used to break the recursion."
                                }
                            ],
                            "children": [],
                            "level": 2
                        },
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 4,
                                "reading_order": 204,
                                "text": "What you need to know:"
                            },
                            "content": [],
                            "children": [],
                            "level": 2
                        },
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 4,
                                "reading_order": 205,
                                "text": "Stack level too deep and stack overflow."
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 4,
                                    "reading_order": 206,
                                    "text": "If you've seen either of these from a recursive algorithm, you messed up."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 4,
                                    "reading_order": 207,
                                    "text": "It means that your base case was never triggered because it was faulty or the problem was so massive you ran\nout of alloted memory."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 4,
                                    "reading_order": 208,
                                    "text": "Knowing whether or not you will reach a base case is integral to correctly using recursion."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 4,
                                    "reading_order": 209,
                                    "text": "Often used in Depth First Search"
                                }
                            ],
                            "children": [],
                            "level": 2
                        }
                    ],
                    "level": 1
                },
                {
                    "heading": {
                        "style": {
                            "bold": true,
                            "italic": false,
                            "font_name": ".SFNSDisplay-Semibold",
                            "mapped_font_size": "large",
                            "mean_size": 10.6
                        },
                        "page": 4,
                        "reading_order": 210,
                        "text": "Iterative Algorithms"
                    },
                    "content": [],
                    "children": [
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 4,
                                "reading_order": 211,
                                "text": "Definition:"
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": "Times-Roman",
                                        "mapped_font_size": "small",
                                        "mean_size": 7.9
                                    },
                                    "page": 4,
                                    "reading_order": 212,
                                    "text": "https://gist.github.com/TSiege/cbb0507082bb18ff7e4b#\ufb01le-the-technical-interview-cheat-sheet-md"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": "Times-Roman",
                                        "mapped_font_size": "small",
                                        "mean_size": 7.9
                                    },
                                    "page": 4,
                                    "reading_order": 213,
                                    "text": "5/18"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": "Times-Roman",
                                        "mapped_font_size": "small",
                                        "mean_size": 7.9
                                    },
                                    "page": 5,
                                    "reading_order": 214,
                                    "text": "31/10/2019"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": "Times-Roman",
                                        "mapped_font_size": "small",
                                        "mean_size": 7.9
                                    },
                                    "page": 5,
                                    "reading_order": 215,
                                    "text": "This is my technical interview cheat sheet. Feel free to fork it or do whatever you want with it. PLEASE let me know if there are any errors or if a\u2026"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 5,
                                    "reading_order": 216,
                                    "text": "An algorithm that is called repeatedly but for a finite number of times, each time being a single iteration."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 5,
                                    "reading_order": 217,
                                    "text": "Often used to move incrementally through a data set."
                                }
                            ],
                            "children": [],
                            "level": 2
                        },
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 5,
                                "reading_order": 218,
                                "text": "What you need to know:"
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 5,
                                    "reading_order": 219,
                                    "text": "Generally you will see iteration as loops, for, while, and until statements."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 5,
                                    "reading_order": 220,
                                    "text": "Think of iteration as moving one at a time through a set."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 5,
                                    "reading_order": 221,
                                    "text": "Often used to move through an array."
                                }
                            ],
                            "children": [],
                            "level": 2
                        },
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 5,
                                "reading_order": 222,
                                "text": "Recursion Vs. Iteration"
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 5,
                                    "reading_order": 223,
                                    "text": "The differences between recursion and iteration can be confusing to distinguish since both can be used to implement\nthe other. But know that,"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 5,
                                    "reading_order": 224,
                                    "text": "Recursion is, usually, more expressive and easier to implement."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 5,
                                    "reading_order": 225,
                                    "text": "Iteration uses less memory."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 5,
                                    "reading_order": 226,
                                    "text": "Functional languages tend to use recursion. (i.e. Haskell)"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 5,
                                    "reading_order": 227,
                                    "text": "Imperative languages tend to use iteration. (i.e. Ruby)"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 5,
                                    "reading_order": 228,
                                    "text": "Check out this Stack Overflow post for more info."
                                }
                            ],
                            "children": [],
                            "level": 2
                        },
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 5,
                                "reading_order": 229,
                                "text": "Pseudo Code of Moving Through an Array (this is why iteration is used for this)"
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": "Menlo-Regular",
                                        "mapped_font_size": "small",
                                        "mean_size": 7.2
                                    },
                                    "page": 5,
                                    "reading_order": 230,
                                    "text": "Recursion                         | Iteration \n----------------------------------|---------------------------------- \nrecursive method (array, n)       | iterative method (array) \n  if array[n] is not nil          |   for n from 0 to size of array \n    print array[n]                |     print(array[n]) \n    recursive method(array, n+1)  | \n  else                            | \n    exit loop                     |"
                                }
                            ],
                            "children": [],
                            "level": 2
                        }
                    ],
                    "level": 1
                },
                {
                    "heading": {
                        "style": {
                            "bold": true,
                            "italic": false,
                            "font_name": ".SFNSDisplay-Semibold",
                            "mapped_font_size": "large",
                            "mean_size": 10.6
                        },
                        "page": 5,
                        "reading_order": 231,
                        "text": "Greedy Algorithm"
                    },
                    "content": [],
                    "children": [
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 5,
                                "reading_order": 232,
                                "text": "Definition:"
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 5,
                                    "reading_order": 233,
                                    "text": "An algorithm that, while executing, selects only the information that meets a certain criteria."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 5,
                                    "reading_order": 234,
                                    "text": "The general five components, taken from Wikipedia:"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 5,
                                    "reading_order": 235,
                                    "text": "A candidate set, from which a solution is created."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 5,
                                    "reading_order": 236,
                                    "text": "A selection function, which chooses the best candidate to be added to the solution."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 5,
                                    "reading_order": 237,
                                    "text": "A feasibility function, that is used to determine if a candidate can be used to contribute to a solution."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 5,
                                    "reading_order": 238,
                                    "text": "An objective function, which assigns a value to a solution, or a partial solution."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 5,
                                    "reading_order": 239,
                                    "text": "A solution function, which will indicate when we have discovered a complete solution."
                                }
                            ],
                            "children": [],
                            "level": 2
                        },
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 5,
                                "reading_order": 240,
                                "text": "What you need to know:"
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 5,
                                    "reading_order": 241,
                                    "text": "Used to find the expedient, though non-optimal, solution for a given problem."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 5,
                                    "reading_order": 242,
                                    "text": "Generally used on sets of data where only a small proportion of the information evaluated meets the desired result."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 5,
                                    "reading_order": 243,
                                    "text": "Often a greedy algorithm can help reduce the Big O of an algorithm."
                                }
                            ],
                            "children": [],
                            "level": 2
                        },
                        {
                            "heading": {
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "font_name": ".SFNSText-Semibold",
                                    "mapped_font_size": "middle",
                                    "mean_size": 8.5
                                },
                                "page": 5,
                                "reading_order": 244,
                                "text": "Pseudo Code of a Greedy Algorithm to Find Largest Difference of any Two Numbers in an Array."
                            },
                            "content": [
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": "Menlo-Regular",
                                        "mapped_font_size": "small",
                                        "mean_size": 7.2
                                    },
                                    "page": 5,
                                    "reading_order": 245,
                                    "text": "greedy algorithm (array) \n  var largest difference = 0 \n  var new difference = find next difference (array[n], array[n+1]) \n  largest difference = new difference if new difference is > largest difference \n  repeat above two steps until all differences have been found \n  return largest difference"
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "middle",
                                        "mean_size": 8.5
                                    },
                                    "page": 5,
                                    "reading_order": 246,
                                    "text": "This algorithm never needed to compare all the differences to one another, saving it an entire iteration."
                                },
                                {
                                    "style": {
                                        "bold": false,
                                        "italic": false,
                                        "font_name": ".SFNSText",
                                        "mapped_font_size": "xsmall",
                                        "mean_size": 6.4
                                    },
                                    "page": 5,
                                    "reading_order": 247,
                                    "text": "Author"
                                }
                            ],
                            "children": [
                                {
                                    "heading": {
                                        "style": {
                                            "bold": true,
                                            "italic": false,
                                            "font_name": ".SFNSText-Semibold",
                                            "mapped_font_size": "xsmall",
                                            "mean_size": 6.4
                                        },
                                        "page": 5,
                                        "reading_order": 248,
                                        "text": "Owner"
                                    },
                                    "content": [
                                        {
                                            "style": {
                                                "bold": false,
                                                "italic": false,
                                                "font_name": ".SFNSText",
                                                "mapped_font_size": "small",
                                                "mean_size": 7.4
                                            },
                                            "page": 5,
                                            "reading_order": 249,
                                            "text": "TSiege commented on 2 May 2014"
                                        },
                                        {
                                            "style": {
                                                "bold": false,
                                                "italic": false,
                                                "font_name": "Times-Roman",
                                                "mapped_font_size": "small",
                                                "mean_size": 7.9
                                            },
                                            "page": 5,
                                            "reading_order": 250,
                                            "text": "https://gist.github.com/TSiege/cbb0507082bb18ff7e4b#\ufb01le-the-technical-interview-cheat-sheet-md"
                                        },
                                        {
                                            "style": {
                                                "bold": false,
                                                "italic": false,
                                                "font_name": "Times-Roman",
                                                "mapped_font_size": "small",
                                                "mean_size": 7.9
                                            },
                                            "page": 5,
                                            "reading_order": 251,
                                            "text": "6/18"
                                        }
                                    ],
                                    "children": [],
                                    "level": 3
                                }
                            ],
                            "level": 2
                        }
                    ],
                    "level": 1
                }
            ],
            "level": 0
        }
    ]
}